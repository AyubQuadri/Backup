png(file = "boxplot.png")
boxplot(mpg ~ cyl, data= mtcars, xlab = "Number of Cylinders", ylab= "Miles Per Gallon", main="Milage Data")
dev.off()
png(file = "boxplot.png")
boxplot(mpg ~ cyl, data= mtcars, xlab = "Number of Cylinders", ylab= "Miles Per Gallon", main="Milage Data")
boxplot(mpg ~ cyl, data = mtcars, xlab = "Number of Cylinders",
png(file = "boxplot.png")
# Plot the chart.
boxplot(mpg ~ cyl, data = mtcars, xlab = "Number of Cylinders",
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales')
import.packages('ggplot2')
install.packages('ggplot2')
boxplot(mpg ~ cyl, data = mtcars, xlab = "Number of Cylinders",
ylab = "Miles Per Gallon", main = "Mileage Data")
# Save the file.
dev.off()
input <- mtcars[,c('mpg','cyl')]
print(head(input))
print(input)
??bind_rows
str
getwd()
dir
dir()
read.csv(file="*C:\Users\quadris\Desktop\simple.csv" , header=TRUE,sep=",")
read.csv(file="*C:\\Users\\quadris\\Desktop\\simple.csv" , header=TRUE,sep=",")
getwd()
read.csv(file="simple.csv" , header=TRUE,sep=",")
heisenberg <-read.csv(file="simple.csv" , header=TRUE,sep=",")
summary()
summary(heisenberg)
heisenberg
x <- c(11, 7.5, 8.5, 10, 10, 10.5, 5.5, 10, 9, 9.5, 5.25, 8, 6.5, 10.5, 8.75, 0, 6, 6, 6.75,
x
heisenberg
x <- c(11, 7.5, 8.5, 10, 10, 10.5, 5.5, 10, 9, 9.5, 5.25, 8, 6.5, 10.5, 8.75, 0, 6, 6, 6.75, 8.75, 0, 9.5, 7.5, 8.5, 7 );
x
summary(x)
boxplot(x)
var(x)
sd(x)
z = read.csv(file="sample.csv",header = TRUE,sep=",")
z = read.csv(file="sample.csv",header = TRUE,sep=",")
z = read.csv(file="simple1",header = TRUE,sep=",")
getwd()
heisenberg <-read.csv(file="simple.csv" , header=TRUE,sep=",")
heisenberg
summary(heisenberg)
boxplot(heisenberg)
x
summary(x)
var(x)
sd(x)
boxplot(heisenberg$Philips)
boxplot(heisenberg$Philips, heisenberg$Mathew)
boxplot(heisenberg$Philips as Philips, heisenberg$Mathew as Mathew)
boxplot(heisenberg$Philips, heisenberg$Mathew)
PrA <- c(.75,.25)
PrB <- c(6/9,5/7)
BayesTheorem(PrA, PrB)
BayesTheorem(PrA, PrBA)
install.packages('LaplacesDemon')
BayesTheorem(PrA, PrBA)
PrA <- c(.75,.25)
PrB <- c(6/9,5/7)
BayesTheorem(PrA, PrBA)
heisenberg <-read.csv(file="simple.csv" , header=TRUE,sep=",")
install.packages('LaplacesDemon')
PrA <- c(0.75,0.25)
PrBA <- c(6/9, 5/7)
BayesTheorem(PrA, PrBA)
libarary(LaplacesDemon)
library(LaplacesDemon)
PrA <- c(0.75,0.25)
PrBA <- c(6/9, 5/7)
BayesTheorem(PrA, PrBA)
BayesTheorem(PrA, PrBA)
slices <- c(10, 12, 4, 16, 8)
lbls <- c("US", "UK", "Australia", "Germany", "France")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Pie Chart of Countries")
x <- c(4,2,4,3,11,6,4,4,1,4,2,3,3,1,2,2,6,0,2,1,3,2)
summary(x)
boxplot(x)
var(x)
sd(x)
hist(x)
duration = faithful$eruptions
breaks = seq(1.5,5.5, by=0.5)
duration.cut = cut(duration, breaks,right = FALSE)
duration.freq = table(duration.freq)
duration.cumrelfreq = duration.cumrelfreq/nrow(faithful)
cumrelfreq0 = c(0, duration.cumrelfreq)
plot(breaks, cumrelfreq0,main="Old Faithful Eruptions", xlab="Duration",
ylab="Cumulative frequency")
lines(breaks, cumrelfreq0)
cumrelfreq0 = c(0, duration.cumrelfreq)
duration.cumrelfreq = duration.cumfreq / nrow(faithful)
duration = faithful$eruptions
stem(duration)
eruptions
duration
library(googleVis)
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
require(datasets)
options=list(region="US",
states <- data.frame(state.name, state.x77)
GeoStates <- gvisGeoChart(states, "state.name", "Illiteracy",
x<- c(4,7,11,16,20,22,25,26,33)
summary(x)
mode(x)
getmode(x)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
x<- c(4,7,11,16,20,22,25,26,33)
summary(x)
getmode(x)
x<- c(4,7,11,16,20,22,22,25,26,33)
getmode(x)
plot(cars)
df
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("mxnet")
(39-30)/16
(39-30)/4
(40-30)/4
(21-30)/4
pnorm(40,mean = 30,sd=4)
pnorm(21,mean = 30,sd=4)
1- pnorm(21,mean = 30,sd=4)
pnorm(40,mean = 30,sd=4,1e-3)
pnorm(40,mean = 30,sd=4)
sprintf("%.3f",0.9937903)
foreach(STDIN)
sapply(STDIN,FUN = pnorm(STDIN,mean=30,sd=4))
STDIN <- c(40,21,30,35)
sapply(STDIN,FUN = pnorm(STDIN,mean=30,sd=4))
sapply(STDIN,FUN (pnorm(STDIN,mean=30,sd=4)))
sapply(STDIN,function(x) pnorm(STDIN,mean=30,sd=4))
pnorm(40,mean = 30,sd=4)
abc <-sapply(STDIN,function(x) pnorm(STDIN,mean=30,sd=4))
abc<-abc[,1]
abc
sprintf(%.3f,abc)
sapply(abc, function(x) sprintf(%.3f,abc))
sapply(abc, function(x) sprintf(%.3f,x))
sprintf(%.3f,x)
sprintf(%.3f,x[1,])
sprintf(%.3f,abc[1,])
abc[1,]
abc[1,]
abc
abc(1)
abc[1]
for(i<=length(abc))
length(abc)
Result[i]
result <- NULL
for(i<length(abc))
i=0
for(i<length(abc))
result <- sprintf("%.3f",abc[])
result
result <- sprintf("%.3f",abc)
result
abc[2] <- 1-abc[2]
abc[3] <- abc[3]-abc[4]
abc
abc[4]<- Null
abc[4]<- NA
abc
abc <- abc(1:3)
abc <- abc[1:3]
abc
result <- sprintf("%.3f",abc)
result
install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
library(xgboost)
library('xgboost')
install.packages("JGR")
library(JGR)
JGR()
rm(list=ls())
setwd("C:/Users/quadris/Desktop/My Learning/INSOFE CPEE/Day 29 Visualization & Story Telling/Lab")
data<-read.csv("UniversalBank.csv",header=T)
attach(data)
names(data)
par(mfrow=c(1,3))
hist(CCAvg, col="red", xlab="CC Avg",main="Histogram for CCAvg")
hist(Age, col="green", xlab="Age",main="Histogram for Age")
hist(Experience, col="blue", xlab="Experience",main="Histogram for Experience")
par(mfrow=c(1,2))
boxplot(Income, main="Income distribution")
abline(h = mean(Income), lty=2)
boxplot(Income~Education, main="Education Vs. Income",
xlab="Education", ylab="Income")
abline(h = mean(Income), lty=2)
table(data$Personal.Loan) # or summary(as.factor(data$Personal.Loan))
par(mfrow=c(1,1))
barplot(table(data$Personal.Loan),
main="Number of customer in each class")
rm(list=ls())
setwd("C:/Users/quadris/Desktop/My Learning/INSOFE CPEE/Day 29 Visualization & Story Telling/Lab")
data <- read.csv("EconomistData.csv")
View(data)
data <- read.csv("EconomistData.csv",header = T,sep = ",")
View(data)
ggplot(data=data,aes(x=CPI, y=HDI))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
library(ggplot2)
ggplot(data=data,aes(x=CPI, y=HDI))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
ggplot(data=data,aes(x=CPI, y=HDI,colours(as.factor(Region))))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
ggplot(data=data,aes(x=CPI, y=HDI,colours(as.factor(Region))))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
library(ggplot2)
ggplot(data=data,aes(x=CPI, y=HDI))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
attach(data)
ggplot(data=data,
aes(x=CPI, y=HDI, color=as.factor(Region)))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI,
color=as.factor(Region)))+
geom_point()+
theme_bw()+
geom_smooth(method = 'lm')
ggplot(data=data,
aes(x=CPI,
y=HDI,
color=as.factor(Region)))+
geom_point()+
theme_bw()+
geom_smooth(method = 'glm')
ggplot(data=data,
aes(x=CPI,
y=HDI      ))+
geom_point()+
theme_bw()+
geom_smooth(method = 'glm')
ggplot(data=data,
aes(x=CPI,
y=HDI))+
geom_point()+
theme_bw()+
geom_smooth(method = 'lm')
ggplot(data=data,
aes(x=CPI,
y=HDI))+
geom_point()+
theme_bw()+
geom_smooth(method = 'lm')
ggplot(data=data,
aes(x=CPI,
y=HDI))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI, colours(as.factor(Region))))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI, colours(as.factor(Region))))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI,
colours(as.factor(Region))))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI,
))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI,
color=as.factor(Region)))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI,
))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI,
color=Region))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI,
color=Region))+
geom_point()+
theme_bw()+
xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI,
))+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI,
))+
aes(color=Region)+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI))+
aes(color=Region)+
geom_point()+
theme_bw()+
geom_smooth()
ggplot(data=data,
aes(x=CPI,
y=HDI))+
aes(color=Region)+
geom_point()+
theme_bw()+
xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI ))+
aes(color=Region)+
geom_point()+
geom_smooth()+
theme_bw()+
xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI ))+
geom_point()+
aes(color=Region)+
geom_smooth()+
theme_bw()+
xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI ))+
geom_point()+
aes(color=Region)+
geom_smooth()+
theme_bw()+
xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI )+
geom_point()+
aes(color=Region)+
geom_smooth()+
theme_bw()+
xlab("CPI")+ylab("HDI"))
ggplot(data=data,
aes(x=CPI,
y=HDI ))+
geom_point()+
aes(color=Region)+
geom_smooth()+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ))+
geom_point()+
geom_smooth()+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI,
color=as.factor(Region)))+
geom_point()+theme_bw()+xlab("CPI")+ylab("HDI")
ggplot(data=data,
aes(x=CPI,
y=HDI ))+
geom_point()+
geom_smooth()+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ))+
geom_point()+
geom_smooth(aes(group=1))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=1))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=2))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=3))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=0))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=0))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=56))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
ggplot(data=data,
aes(x=CPI,
y=HDI ,
color = Region))+
geom_point()+
geom_smooth(aes(group=x))+
theme_bw()+
xlab("Corruption Perception Index")+ylab("Human development Index")
library(xgboost)
require(xgboost)
install.packages("stringi")
library(xgboost)
paris(iris)
data(iris)
pairs(iris)
hist(iris)
hist(iris$Sepal.Width)
