rm(list=ls(all=TRUE))
setwd("C:/Users/quadris/Desktop/My Learning/INSOFE CPEE/Day 9/Lab Activity/20170121_Batch24_CSE7202c_Multiple_Lin_Reg_Lab_Activity")
data <- read.csv("CustomerData.csv",header = T, sep = ",")
str(data)
data <- subset(data, select = -CustomerID)
str(data)
data <- read.csv("CustomerData.csv",header = T, sep = ",")
data1 <- subset(data, select = -CustomerID)
str(data1)
data1 <- as.factor(data1$City)
str(data1)
data1 <- subset(data, select = -CustomerID)
str(data1)
data1$City <- as.factor(data1$City)
str(data1)
library(caTools)
require(caTools)
set.seed(123)
sample = sample.split(data1$TotalRevenueGenerated, SplitRatio = .70)
train = subset(data, sample == TRUE)
test = subset(data, sample == FALSE)
attach(data1)
lmOut <- lm(TotalRevenueGenerated ~.,data = data1)
summary(lmOut)
install.packages('mass')
install.packages('MASS')
library("MASS")
require("MASS")
step(lmOut, direction="both")
model_AIC= lm(formula = TotalRevenueGenerated ~ City + NoOfChildren + MinAgeOfChild +
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +
NoOfGamesPlayed + NoOfGamesBought + FavoriteChannelOfTransaction +
FavoriteGame, data = data1)
summary(model_AIC)
View(data)
View(data1)
View(data1)
lmOut <- lm(TotalRevenueGenerated ~.,data = train)
summary(lmOut)
step(lmOut, direction="both")
model_AIC= lm(formula = TotalRevenueGenerated ~ City + NoOfChildren + MinAgeOfChild +
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +
NoOfGamesPlayed + NoOfGamesBought + FavoriteChannelOfTransaction +
FavoriteGame, data = data1)
summary(model_AIC)
step(lmOut, direction="both")
model_AIC= lm(formula = TotalRevenueGenerated ~ City + NoOfChildren + MinAgeOfChild +
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +
NoOfGamesPlayed + NoOfGamesBought + FavoriteChannelOfTransaction +
FavoriteGame, data = train)
summary(model_AIC)
predicted <- predict(model_AIC,train)
residual = train$TotalRevenueGenerated - predicted
residual
plot(residual)
predicted <- predict(model_AIC,test)
residual = test$TotalRevenueGenerated - predicted
plot(residual)
data <- read.csv("CustomerData.csv",header = T, sep = ",")
rm(list = ls())
setwd("C:/Users/quadris/Desktop/My Learning/INSOFE CPEE/Day 9/Lab Activity/20170121_Batch24_CSE7202c_Multiple_Lin_Reg_Lab_Activity")
data <- read.csv("CustomerData.csv",header = T, sep = ",")
str(data)
data1 <- subset(data, select = -CustomerID)
str(data1)
data1$City <- as.factor(data1$City)
str(data1)
library(caTools)
require(caTools)
set.seed(123)
sample = sample.split(data1$TotalRevenueGenerated, SplitRatio = .70)
train = subset(data, sample == TRUE)
test = subset(data, sample == FALSE)
lmOut <- lm(TotalRevenueGenerated ~.,data = train)
summary(lmOut)
install.packages('MASS')
install.packages("MASS")
library("MASS")
require("MASS")
step(lmOut, direction="both")
model_AIC= lm(formula = TotalRevenueGenerated ~ City + NoOfChildren + MinAgeOfChild +
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +
NoOfGamesPlayed + NoOfGamesBought + FavoriteChannelOfTransaction +
FavoriteGame, data = train)
summary(model_AIC)
predicted <- predict(model_AIC,test)
residual = test$TotalRevenueGenerated - predicted
plot(residual)
View(train)
rm(list = ls())
setwd()
setwd("C:/Users/quadris/Desktop/My Learning/INSOFE CPEE/Day 9/Lab Activity/20170121_Batch24_CSE7202c_Multiple_Lin_Reg_Lab_Activity")
data <- read.csv("CustomerData.csv",header = T, sep = ",")
str(data)
#subset the data without CustomerID
data1 <- subset(data, select = -CustomerID)
str(data1)
#convert city to factor
data1$City <- as.factor(data1$City)
str(data1)
#split the data into train and test
library(caTools)
require(caTools)
set.seed(123)
sample = sample.split(data1$TotalRevenueGenerated, SplitRatio = .70)
train = subset(data1, sample == TRUE)
test = subset(data1, sample == FALSE)
str(train)
str(test)
lmOut <- lm(TotalRevenueGenerated ~.,data = train)
summary(lmOut)
install.packages('MASS')
install.packages("MASS")
library("MASS")
require("MASS")
step(lmOut, direction="both")
model_AIC= lm(formula = TotalRevenueGenerated ~ City + NoOfChildren + MinAgeOfChild +
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +
NoOfGamesPlayed + NoOfGamesBought + FavoriteChannelOfTransaction +
FavoriteGame, data = train)
summary(model_AIC)
View(train)
predicted <- predict(model_AIC,test)
residual = test$TotalRevenueGenerated - predicted
plot(residual)
library(dummies)
library(dummies)
step(lmOut, direction="both")
model_AIC= lm(formula = TotalRevenueGenerated ~ City + NoOfChildren + MinAgeOfChild +
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +
NoOfGamesPlayed + NoOfGamesBought + FavoriteChannelOfTransaction +
FavoriteGame, data = train)
summary(model_AIC)
model_AIC= lm(formula = TotalRevenueGenerated ~ City + NoOfChildren + MinAgeOfChild +
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +
NoOfGamesPlayed + NoOfGamesBought + FavoriteChannelOfTransaction
, data = train)
summary(model_AIC)
predicted <- predict(model_AIC,test)
residual = test$TotalRevenueGenerated - predicted
plot(residual)
rm(list = ls())
setwd()
setwd("C:/Users/quadris/Desktop/data science/data set Credit card/Walmart")
train <- read.csv("train.csv",header = T, sep = ",")
View(train)
test <- read.csv("test.csv",header = T,sep = ",")
View(test)
feature <-read.csv("features.csv",header = T,sep = ",")
View(train)
as.factor(train$Store)
as.factor(train$Dept)
train$Store <- as.factor(train$Store)
train$IsHoliday <- as.factor(train$IsHoliday)
train$Dept < as.factor(train$Dept)
train$Dept < as.factor(train$Dept)
getwd()
getwd()
Tenure + FrquncyOfPurchase + NoOfUnitsPurchased + FrequencyOFPlay +df
getwd()
sum(!is.na(train))
sum(!is.na(train$Weekly_Sales))
rm(list=ls(all=TRUE))
setwd("C:/Users/quadris/Desktop/My Learning/INSOFE CPEE/Day 9/Lab Activity/20170121_Batch24_CSE7202c_Multiple_Lin_Reg_Lab_Activity")
data<-read.csv("CustomerData.csv",header=T)
str(data)
levels(data$FavoriteGame)
data = data[,-1]
data$City = as.factor(data$City)
dataForModel = data
rows=seq(1,nrow(dataForModel),1)
set.seed(123)
trainRows=sample(rows,(70*nrow(dataForModel))/100)
train = dataForModel[trainRows,]
test = dataForModel[-trainRows,]
LinReg1<- lm(TotalRevenueGenerated ~ ., data=train)
summary(LinReg1)
par(mfrow=c(2,2))
plot(LinReg1)
plot(LinReg1,which=4)
par(mfrow=c(1,1)) #reset default
LinReg2<-lm(TotalRevenueGenerated~.-NoOfGamesPlayed,data=train)
summary(LinReg2)
LinReg3<-lm(TotalRevenueGenerated~.-NoOfGamesPlayed-MaxAgeOfChild,data=train)
summary(LinReg3)
library(DMwR)
regr.eval(train$TotalRevenueGenerated, LinReg2$fitted.values)
Pred<-predict(LinReg2,test)
regr.eval(test$TotalRevenueGenerated, Pred)
library(vegan)
str(data)
data_cat <- data[,c(1,11,12)]
data_num <-data[,-c(1,11,12)]
data_num_std <- data.frame(decostand(data_num[,-10],method = "range"),"TotalRevenueGenerated" = data_num$TotalRevenueGenerated)
data_std_final <-data.frame(data_cat,data_num_std)
#Split the data into train and test data sets
rows=seq(1,nrow(data_std_final),1)
set.seed(123)
trainRows=sample(rows,(70*nrow(data_std_final))/100)
train_std = data_std_final[trainRows,]
test_std = data_std_final[-trainRows,]
LinReg_std1<-lm(TotalRevenueGenerated~., data=train_std)
summary(LinReg_std1)
library(car)
vif(LinReg_std1)
str(train_std)
library(MASS)
Step1 <- stepAIC(LinReg_std1, direction="backward")
Step3 <- stepAIC(LinReg1, direction="both")
Mass_LinReg1 <- lm(TotalRevenueGenerated~City+MinAgeOfChild+FavoriteChannelOfTransaction
+FrquncyOfPurchase+FavoriteGame+NoOfGamesBought+MinAgeOfChild
+Tenure+FrequencyOFPlay+NoOfUnitsPurchased,data=train_std)
summary(Mass_LinReg1)
par(mfrow=c(2,2))
plot(Mass_LinReg1)
plot(Mass_LinReg1,which=4)
par(mfrow=c(1,1))
which(rownames(train_std)%in%c(2729))
LinReg_No_infl<- lm(TotalRevenueGenerated ~ ., data=train_std[-230,])
summary(LinReg_No_infl)
regr.eval(train_std$TotalRevenueGenerated, Mass_LinReg1$fitted.values)
MASS_Pred1<-predict(Mass_LinReg1,test_std)
regr.eval(test$TotalRevenueGenerated, MASS_Pred1)
Error_calc = data.frame(train_std$TotalRevenueGenerated,Mass_LinReg1$fitted.values)
write.csv(x = Error_calc,file = "Error_calc.csv")
Error_calc
plot(Error_calc)
